<!doctype html>
<html>

<head>

	<link rel="stylesheet" type="text/css" href="${def:context}/dinamica_bkp.css" />
	<link rel="stylesheet" type="text/css" href="${def:context}/select2.min.css" />

	<!--biblioteca generica JS/Dinamica-->
	<script type="text/javascript" src="${def:context}/action/script">
	</script>
	<script type="text/javascript" src="${def:context}/action/jquery">
	</script>
	<script type="text/javascript" src="${def:context}/action/select2"></script>

</head>

<body>

<!--banner-->
<div class="bannerDialog" id="encabezado_tabla">
	${lbl:b_requisition_detail}
	<img src="${def:context}/images/close.png" class="button" onclick="parent.closeDialog(); parent.search();" title="${lbl:b_close_button}" style="float:right; cursor:pointer;">
	${req:progress}
</div>

<!--formulario addnew/edit-->
<form name="form1" onsubmit="return save()" style="width:500px;">

	<!-- titulo -->
	<h1 id="formTitle">${lbl:b_add_record}</h1>

	<table>

		<!--ancho de la columna de etiquetas-->
		<col width="30%">

		<!--campos-->
	<tr style="display:none">
		<td>${lbl:b_headboard_requisition}*</td>
		<td>
			<select name="smn_requisicion_cabecera_id" id="smn_requisicion_cabecera_id" onchange="chgCombo(smn_requisicion_cabecera_id.options[smn_requisicion_cabecera_id.selectedIndex].text,'smn_requisicion_cabecera_id_name');">
				<smn_requisicion_cabecera_id_rows>
				<option value="${fld:id}">${fld:item}</option>

				</smn_requisicion_cabecera_id_rows>
			</select> 
			<input id="smn_requisicion_cabecera_id_name" name="smn_requisicion_cabecera_id_name" type="hidden">
		</td>
	</tr>
	<tr style="display: none">
		<td>${lbl:b_version_headboard}*</td>
		<td>
			<select name="smn_cabecera_version_id" id="smn_cabecera_version_id" onchange="chgCombo(smn_cabecera_version_id.options[smn_cabecera_version_id.selectedIndex].text,'smn_cabecera_version_id_name');">
				<smn_cabecera_version_id_rows>
				<option value="${fld:id}">${fld:item}</option>

				</smn_cabecera_version_id_rows>
			</select> 
			<input id="smn_cabecera_version_id_name" name="smn_cabecera_version_id_name" type="hidden">
		</td>
	</tr>
	
	<tr id="linea">
		<td>${lbl:b_lines}*</td>
		<td>
			<select class="js-example-basic-single" name="smn_linea_id" id="smn_linea_id" onchange="chgCombo(smn_linea_id.options[smn_linea_id.selectedIndex].text,'smn_linea_id_name');itemlinea(smn_linea_id.options[smn_linea_id.selectedIndex].text,'smn_linea_id_name');serviciolinea(smn_linea_id.options[smn_linea_id.selectedIndex].text,'smn_linea_id_name');afijolinea(smn_linea_id.options[smn_linea_id.selectedIndex].text,'smn_linea_id_name');">
				<option value="">[Cualquiera]</option>
				<smn_linea_id_rows>
				<option value="${fld:id}">${fld:item}</option>

				</smn_linea_id_rows>
			</select> 
			<input id="smn_linea_id_name" name="smn_linea_id_name" type="hidden">
		</td>
	</tr>
	<tr id="naturaleza">
		<td>${lbl:b_nature}*</td>
		<td>
			<select name="smn_naturaleza_id" id="smn_naturaleza_id" onchange="validar();itemlinea(smn_linea_id.options[smn_linea_id.selectedIndex].text,'smn_linea_id_name');serviciolinea(smn_linea_id.options[smn_linea_id.selectedIndex].text,'smn_linea_id_name');afijolinea(smn_linea_id.options[smn_linea_id.selectedIndex].text,'smn_linea_id_name');">
			<option value="IT">${lbl:b_item}</option>
			<option value="SE">${lbl:b_services}</option>
			<option value="AF">${lbl:b_actfij}</option>

			</select> 
		</td>
	</tr>
	<tr id="item">
		<td>${lbl:b_item}</td>
		<td>
			<select class="js-example-basic-single" name="smn_item_id" id="smn_item_id" onchange="chgCombo(smn_item_id.options[smn_item_id.selectedIndex].text,'smn_item_id_name');validarProdEncontrado(smn_item_id.options[smn_item_id.selectedIndex].value);">
				<option value="">[Cualquiera]</option>
				<smn_item_id_rows>
				<option value="${fld:id}">${fld:item}</option>

				</smn_item_id_rows>
			</select> 
			<input id="smn_item_id_name" name="smn_item_id_name" type="hidden">
		</td>
		<td style="display: none;" id="buscarItem">
			<img src="${def:context}/images/search.png" onclick="getItem()" title="Buscar">
		</td>
	</tr>
	<tr id="servicio">
		<td>${lbl:b_services}</td>
		<td>
			<select name="smn_servicio_id" id="smn_servicio_id" onchange="chgCombo(smn_servicio_id.options[smn_servicio_id.selectedIndex].text,'smn_servicio_id_name');validarProdEncontrado(smn_servicio_id.options[smn_servicio_id.selectedIndex].value);">
				<option value="">[Cualquiera]</option>
				<smn_servicio_id_rows>
				<option value="${fld:id}">${fld:item}</option>

				</smn_servicio_id_rows>
			</select> 
			<input id="smn_servicio_id_name" name="smn_servicio_id_name" type="hidden">
		</td>
	</tr>
	<tr id="activo">
		<td>${lbl:b_actfij}</td>
		<td>
			<select name="smn_afijo_id" id="smn_afijo_id" onchange="chgCombo(smn_afijo_id.options[smn_afijo_id.selectedIndex].text,'smn_afijo_id_name');validarProdEncontrado(smn_afijo_id.options[smn_afijo_id.selectedIndex].value);">
				<option value="">[Cualquiera]</option>
				<smn_afijo_id_rows>
				<option value="${fld:id}">${fld:item}</option>

				</smn_afijo_id_rows>
			</select> 
			<input id="smn_afijo_id_name" name="smn_afijo_id_name" type="hidden">
		</td>
	</tr>
	<tr>
		<td>${lbl:b_products_found}*</td>
		<td>
			<select disabled name="rrs_producto_encontrado" id="rrs_producto_encontrado">
			<option value="SI">${lbl:b_yes}</option>
			<option value="NO">${lbl:b_not}</option>

			</select> 
		</td>
	</tr>
	<tr id="contrato" style="display:none">
		<td>${lbl:b_contract}</td>
		<td>
			<select name="smn_contrato_id" id="smn_contrato_id" onchange="chgCombo(smn_contrato_id.options[smn_contrato_id.selectedIndex].text,'smn_contrato_id_name');">
				<option value="">[Cualquiera]</option>
				<smn_contrato_id_rows>
				<option value="${fld:id}">${fld:item}</option>

				</smn_contrato_id_rows>
			</select> 
			<input id="smn_contrato_id_name" name="smn_contrato_id_name" type="hidden">
		</td>
	</tr>
		<tr id="motivovariacion" style="display:none">
			<td>${lbl:b_var_motive}</td>
			<td>
				<input id="rrs_motivo_variacion" name="rrs_motivo_variacion" type="text" maxlength="100" >
			</td>
		</tr>
		<tr id="moneda" style="display:none">
		<td>${lbl:b_coins}</td>
		<td>
			<select name="smn_moneda_id" id="smn_moneda_id" onchange="chgCombo(smn_moneda_id.options[smn_moneda_id.selectedIndex].text,'smn_moneda_id_name'); validarMoneda();">
				<option value="">[Cualquiera]</option>
				<smn_moneda_id_rows>
				<option value="${fld:id}">${fld:item}</option>

				</smn_moneda_id_rows>
			</select> 
			<input id="smn_moneda_id_name" name="smn_moneda_id_name" type="hidden">
		</td>
	</tr>
		<tr id="porcentaje" style="display:none">
			<td>${lbl:b_percentage}</td>
			<td>
				<input id="rrs_porcentaje" name="rrs_porcentaje" type="text" maxlength="10" class="numeric">
			</td>
		</tr>
		<tr>
			<td>${lbl:b_quantity}*</td>
			<td>
				<input id="rss_cantidad" name="rss_cantidad" type="text" maxlength="10" class="numeric">
			</td>
		</tr>
		<tr id="precio" style="display:none">
			<td>${lbl:b_price}*</td>
			<td>
				<input id="rrs_precio" name="rrs_precio" type="text" maxlength="10" class="numeric" onchange="calcularMonto();">
			</td>
		</tr>
		<tr id="monto" style="display:none">
			<td>${lbl:b_mount}*</td>
			<td>
				<input id="rrs_monto" name="rrs_monto" type="text" maxlength="10" class="numeric">
			</td>
		</tr>
		<tr style="display:none" id="r1">
			<td>${lbl:b_coins_price_altern}</td>
			<td>
				<input id="rrs_precio_moneda_alterna" name="rrs_precio_moneda_alterna" type="text" maxlength="10" class="numeric" onchange="calcularMontoAlterno();">
			</td>
		</tr>
		<tr style="display:none" id="r2">
			<td>${lbl:b_coins_mount_altern}</td>
			<td>
				<input id="rrs_monto_moneda_alterna" name="rrs_monto_moneda_alterna" type="text" maxlength="10" class="numeric">
			</td>
		</tr>
	<tr id="proveedor" style="display:none">
		<td>${lbl:b_providers}</td>
		<td>
			<select name="smn_proveedor_id" id="smn_proveedor_id" onchange="chgCombo(smn_proveedor_id.options[smn_proveedor_id.selectedIndex].text,'smn_proveedor_id_name');">
				<option value="">[Cualquiera]</option>
				<smn_proveedor_id_rows>
				<option value="${fld:id}">${fld:item}</option>

				</smn_proveedor_id_rows>
			</select> 
			<input id="smn_proveedor_id_name" name="smn_proveedor_id_name" type="hidden">
		</td>
	</tr>
		<tr>
			<td>${lbl:b_requirement_specification}</td>
			<td>
				<textarea id="rrs_especificaciones_del_requerimiento" name="rrs_especificaciones_del_requerimiento" cols="30" rows="3"></textarea>
				<div id="msjEspecificaciones" style="color: red;"></div>
			</td>
		</tr>
		<tr>
			<td>${lbl:b_date_required}*</td>
			<td style="display: none;">
				<input id="req_fecha_registro" name="req_fecha_registro" type="text" class="date" maxlength="10">
				<img src="${def:context}/images/dropdown.png" title="Desplegar calendario" onclick="calendarOpen('req_fecha_registro')">
			</td>
			<td>
				<input id="rrs_fecha_de_requerido" name="rrs_fecha_de_requerido" type="text" class="date" maxlength="10">
				<img src="${def:context}/images/dropdown.png" title="Desplegar calendario" onclick="calendarOpen('rrs_fecha_de_requerido','req_fecha_registro')">
			</td>
		</tr>
		<tr>
			<td>${lbl:b_observations}</td>
			<td>
				<textarea id="rrs_observaciones" name="rrs_observaciones" cols="30" rows="3"></textarea>
			</td>
		</tr>
	</table>

	<!--botones-->
	<input id="grabar" type="submit" value="${lbl:b_save_button}" class="button">
	<input id="limpiar" type="button" value="${lbl:b_clean_button}" onclick="addNew()" class="button">	
	<input id="copiar" type="button" value="${lbl:b_copy_button}" onclick="getFormValuesToCopy('form1')" class="button">
	<input id="pegar" type="button" value="${lbl:b_paste_button}" onclick="getFormValuesToPaste('form1')" class="button">
	<input id="salir" type="button" value="${lbl:s_exit}" onclick="parent.closeDialog(); parent.search();" class="button">	
	
	<!-- PK-->
<input type="hidden" name="id" value="">

</form>

<!--codigo de soporte del template-->
<script type="text/javascript">

	var recurre = '${fld:recurrente}';
	var id = "${fld:id}" 
	
	onload = function()
	{ 
		

		addNew();
		
		$(document).ready(function() {	
		    $('.js-example-basic-single').select2();
		});

		<req_fecha_requerido_rows>
		document.form1.rrs_fecha_de_requerido.value = "${fld:req_fecha_requerido}";
		document.form1.req_fecha_registro.value = "${fld:req_fecha_registro}"
		</req_fecha_requerido_rows>

		// chgCombo7('${fld:entidad}');
		document.form1.smn_item_id.disabled=false;
		document.form1.smn_servicio_id.disabled=true;
		document.form1.smn_afijo_id.disabled=true;
		
		document.getElementById("rrs_monto").disabled=true;

		//Inicia el producto encontrado con valor 'NO'
		document.form1.rrs_producto_encontrado.selectedIndex = 1; 

		recurrente(recurre);
		
		document.getElementById('smn_requisicion_cabecera_id').value = '${fld:id2}';
		document.getElementById('smn_cabecera_version_id').value = '${fld:id3}';

		

		if (id!="")
			edit(id);
	} 

	function search()
	{
		addNew();

		<req_fecha_requerido_rows>
		document.form1.rrs_fecha_de_requerido.value = "${fld:req_fecha_requerido}";
		document.form1.req_fecha_registro.value = "${fld:req_fecha_registro}"
		</req_fecha_requerido_rows>

		// chgCombo7('${fld:entidad}');
		document.form1.smn_item_id.disabled=false;
		document.form1.smn_servicio_id.disabled=true;
		document.form1.smn_afijo_id.disabled=true;
		//document.form1.smn_item_id.value='';
		//document.form1.smn_servicio_id.value='';
		//document.form1.smn_afijo_id.value='';
		setSelectedIndexValue('[Cualquiera]', smn_item_id);
		setSelectedIndexValue('[Cualquiera]', smn_servicio_id);
		setSelectedIndexValue('[Cualquiera]', smn_afijo_id);

		document.getElementById("rrs_monto").disabled=true;

		//Inicia el producto encontrado con valor 'NO'
		document.form1.rrs_producto_encontrado.selectedIndex = 1; 

		recurrente(recurre);
		
		document.getElementById('smn_requisicion_cabecera_id').value = '${fld:id2}';
		document.getElementById('smn_cabecera_version_id').value = '${fld:id3}';

		if (id!="")
			edit(id);
	}

	//Funcion para determinar si un producto(item,servicio o afijo fue encontrado).
	//Creada por Engellbert Torrealba.
	function validarProdEncontrado(value)
	{		
		if(value != '' && value != 0)
			document.form1.rrs_producto_encontrado.selectedIndex = 0; //SI
		else
			document.form1.rrs_producto_encontrado.selectedIndex = 1; //NO
	}
	
	//var geo_id7 = null;
	function chgCombo7(id)
	{		
		var uri="${def:actionroot}/getempresa?id=" + id;
		// alert(uri)
		if (id!=null && id!="") 
		{
			
			return ajaxCall(	
							httpMethod="GET", 
							uri, 
							divResponse=null, 
							divProgress="status", 
							formName="form1", 
							afterResponseFn=setElementFirstIndex('smn_item_id'), 
							onErrorFn=null);				
		}	
	}
	
	function validar(){
		var naturaleza = document.getElementById("smn_naturaleza_id").value;
		var pencontrado = document.getElementById("rrs_producto_encontrado").value;
		
		/*if(naturaleza == "IT" && pencontrado == 'SI')
		{
			document.getElementById("smn_item_id").disabled=false;
			document.getElementById("buscarItem").style.display = "initial";
			
		}else{
			document.getElementById("smn_item_id").disabled=false;
			document.getElementById("buscarItem").style.display = "initial";
		//	document.getElementById("smn_item_id").value="";
		} */
		
		if(naturaleza == "IT")
		{		
			document.getElementById("smn_item_id").disabled=false;
			document.getElementById("buscarItem").style.display = '';
		}
		else
		{
			document.getElementById("smn_item_id").disabled=true;
			setSelectedIndexValue('[Cualquiera]', smn_item_id);
			document.getElementById("buscarItem").style.display = 'none';
			//El producto encontrado = 'NO'
			document.form1.rrs_producto_encontrado.selectedIndex = 1; 
		}

		if(naturaleza == "SE" ){
			
			document.getElementById("smn_servicio_id").disabled=false;
		
		
			
		}else {
		
			document.getElementById("smn_servicio_id").disabled=true;
			setSelectedIndexValue('[Cualquiera]', smn_servicio_id);
			document.getElementById("smn_servicio_id").value="";
			//El producto encontrado = 'NO'
			document.form1.rrs_producto_encontrado.selectedIndex = 1;
		}
		
		if(naturaleza == "AF"){
		
			document.getElementById("smn_afijo_id").disabled=false;
		
		}else {
			document.getElementById("smn_afijo_id").disabled=true;
			setSelectedIndexValue('[Cualquiera]', smn_afijo_id);
			document.getElementById("smn_afijo_id").value="";	
			//El producto encontrado = 'NO'
			document.form1.rrs_producto_encontrado.selectedIndex = 1;
		}

		
		
	}
	
	function calcularMonto(){
		var cant = document.getElementById("rss_cantidad").value;
		var prec = document.getElementById("rrs_precio").value;
		var mont = "";
		
		
		mont = cant * prec;
		
		document.getElementById("rrs_monto").value = mont;
		
	}
	
	function calcularMontoAlterno(){
		var cant = document.getElementById("rss_cantidad").value;
		var prec = document.getElementById("rrs_precio_moneda_alterna").value;
		var mont = "";
		
		
		mont = cant * prec;
		
		document.getElementById("rrs_monto_moneda_alterna").value = mont;
		
	}
	
	function validarMoneda(){
		var moneda = document.getElementById("smn_moneda_id").value;
		
		
		if(moneda == "360"){
				//document.getElementById("rrs_precio").disabled=true;
				//document.getElementById("rrs_monto").disabled=true;
				//document.getElementById("rrs_precio_moneda_alterna").value="";
				//document.getElementById("rrs_monto_moneda_alterna").value="";
				//Oculta los input de moneda alterna
				//document.getElementById('r1').style="display:none";
				//document.getElementById('r2').style="display:none";

				document.getElementById('cantidad').style="";
				document.getElementById('precio').style="";
				document.getElementById('monto').style="";
				
		}else{

				document.getElementById("rrs_precio").disabled=true;
				document.getElementById("rrs_monto").disabled=true;
				document.getElementById("rrs_precio").value="";
				document.getElementById("rrs_monto").value="";

				//Oculta los input de moneda alterna
				document.getElementById('r1').style="";
				document.getElementById('r2').style="";
		}
		
	}



	//Author     : SIMONE
	//Description: Set selected index into combo box
	//Return     : None
		function setSelectedIndex(code, combo, description) 
		{
			//alert(code, combo, descripcion);
			//alert('text = ' + combo.options[i].text + ' value = ' + combo.options[i].value)
		    for (var i = 0; i < combo.options.length; i++) 
		    {
				var valueText = code;
				if (description != null)
				{
					valueText = valueText + ' - ' + description;
				}
	    	    if (combo.options[i].text == valueText) 
				{
	        	//alert('text = ' + combo.options[i].text + ' value = ' + combo.options[i].value)
	        	combo.options[i].selected = true;
				return;
	        	}
	    	}  
		}

	//Author     : SIMONE
	//Description: Set first element as selected value
	//Return     : None
	function setElementFirstIndex(id)
		{
			var combo = document.getElementById(id); combo.selectedIndex = 0;
		}

	//Author     : SIMONE
	 //Description: Insert new value into combo box
	 //Return     : None
	 function insertComboBox(code, combo, description, field) 
		{
		 	var valueText = code;
			if (description != null)
			{
				valueText = valueText + ' - ' + description;
			}
			var option = document.createElement("option");
			option.text = valueText; 
			option.value = bdID;
			//alert(field)		
			if (field == 'smn_clase_auxiliar_rf')
			{
				document.form1.smn_clase_auxiliar_rf.add(option, combo.options.length); 
			}			
			if (field == 'smn_auxiliar_rf')
			{
				document.form1.smn_auxiliar_rf.add(option, combo.options.length); 
			}				
		}
	 
	//Author     : SIMONE
	//Description: Add new value to combo box
	//Return     : None
	function addValueToCombo(code, description, field) 
		{	
			var combo = document.getElementById(field);	    
			insertComboBox(code, combo, description, field); 
		}
	
		
	//Author     : SIMONE
	//Description: Set selected index into combo box
	//Return     : None
	function setSelectedIndexValue(value, combo) 
			{
				for (var i = 0; i < combo.options.length; i++) 
				{					
					if (combo.options[i].text == value) 
					{
						combo.options[i].selected = true;
						return;
					}
				} 
			}
	
	//Author     : SIMONE
	//Description: Get text valueof selected index
	//Return     : Text associated to index
	function getSelectedIndex(combo) 
			{
				for (var i = 0; i < combo.options.length; i++) 
				{
					if (combo.options[i].selected == true) 
					{
						return combo.options[i].text; 
					}
				} 	
			}
	
	function getIDSelectedIndex(combo) 
			{
				for (var i = 0; i < combo.options.length; i++)  
				{
					if (combo.options[i].selected == true) 
					{
						return combo.options[i].value; 
					} 
				}
			}
	
	var bdID;
	function setID(id)
	{
		bdID = id; 
	}

	//Author     : SIMONE
	//Description: Set value to combo box
	//Parameters: 	code 		– (it is code associated into each database table) 
	//             	description 	- it is description associated into each database table 
	//             	field 		- name combo field
	//             	id 		- identifier retrieved after transaction
	//             	linked 		- flag indicates 'true' when combos are linked.
	//Return     : None
	function setValueComboBox(code, description, field, linked)
			{
				//add value text to combo
				addValueToCombo(code,description,field);
				//get select object 
				var combo = document.getElementById(field);
				//set element selected to field referenced
				setSelectedIndex(code,combo, description);
				//set text value to combo field
				var valueText = getSelectedIndex(combo);		
				//get hidden field in order to set any value
				var combo = document.getElementById(field+'_name');
		
				combo.text  = valueText;
				combo.value = bdID; 
			}
	
	function chgCombo(text,id)
	{
		document.getElementById(id).value = text;
	}
	
	//configurar formulario para ingresar registro nuevo
	function addNew()
	{

		document.getElementById("formTitle").innerHTML = "${lbl:b_add_record}";
		document.getElementById("grabar").disabled=false;
		clearForm("form1");
		document.getElementById('smn_requisicion_cabecera_id').value = 	'${fld:id2}';
		document.getElementById('smn_cabecera_version_id').value = 	'${fld:id3}';		
		setFocusOnForm("form1");
	}
	
	//retorna al estado previo que corresponde
	//al estado actual de la pagina, cada llamada Ajax
	//se encarga de definir cual es la funcion de goBack() que aplica
	function goBack() 
	{
		_goBackFn()			
	}
	
	//mostrar la actualizacion de un registro
	function insert()
	{		
			clearErrorMessages();
			
			document.getElementById("grabar").disabled=true;
			
			//llamada Ajax...
			return ajaxCall(httpMethod="POST", 
							uri="${def:actionroot}/insert", 
							divResponse=null, 
							divProgress="status", 
							formName="form1", 
							afterResponseFn=null, 
							onErrorFn=retryAddnewOrEdit);	
	}
	
	//restaurar el formulario en caso de error
	function retryAddnewOrEdit() {
		document.getElementById("grabar").disabled=false;
		setFocusOnForm("form1");		
	}
	
	
	
	//grabar el formulario
	function save()
	{
		var prodEncontrado = document.form1.rrs_producto_encontrado.value;
		var especificaciones = document.form1.rrs_especificaciones_del_requerimiento.value;

		if (prodEncontrado == 'NO' && especificaciones == '') 
		{
			msjEspecificaciones.innerHTML="Este valor DEBE ser ingresado";
			return false;
		}
		else
			msjEspecificaciones.innerHTML="";

		//determina si es un insert o un update
		if (document.form1.id.value=="")
			return insert();
		else
			return update();
	}
	
	//editar registro en formulario
	function edit(id)
	{
			clearErrorMessages();

			document.form1.smn_requisicion_cabecera_id.disabled=true;
			document.form1.smn_cabecera_version_id.disabled=true;
			//llamada Ajax...
			ajaxCall(httpMethod="GET", 
							uri="${def:actionroot}/edit?id=" + id, 
							divResponse=null, 
							divProgress="status", 
							formName=null, 
							afterResponseFn=null, 
							onErrorFn=null);	
	}
	
	//actualizar registro en BD
	function update()
	{		
			clearErrorMessages();
			document.getElementById("grabar").disabled=true;
			
			//llamada Ajax...
			return ajaxCall(httpMethod="POST", 
							uri="${def:actionroot}/update", 
							divResponse=null, 
							divProgress="status", 
							formName="form1", 
							afterResponseFn=null, 
							onErrorFn=retryAddnewOrEdit);	

	}

			//Author     : SIMONE
	//Description: Set first element as selected value
	//Return     : None
	function setElementFirstIndex(id)
	{
		var combo = document.getElementById(id);
		combo.selectedIndex = 0;
	}

	//Author     : SIMONE
	//Description: Insert new value into combo box
	//Return     : None
	function insertComboBox(code, combo, description) {
		var valueText = code;
		if (description != null)
		{
			valueText = valueText + ' - ' + description;
		}
		//alert("Insert Combo: "+valueText);
        combo.options[combo.options.length] = new Option(valueText);
	}
	
	//Author     : SIMONE
	//Description: Add new value to combo box
	//Return     : None
	function addValueToCombo(code, description, field) 
	{
	    var combo = document.getElementById(field);	    
	    insertComboBox(code, combo, description);
	}
	
	//Author     : SIMONE
	//Description: Set selected index into combo box
	//Return     : None
	function setSelectedIndex(code, combo, description) 
	{
	    for (var i = 0; i < combo.options.length; i++) 
	    {
			var valueText = code;
			if (description != null)
			{
				valueText = valueText + ' - ' + description;
			}
	        if (combo.options[i].text == valueText) 
	        {
	        	combo.options[i].selected = true;
	            return;
	        }
	    }
	}
	
	//Author     : SIMONE
	//Description: Get text valueof selected index
	//Return     : Text associated to index
	function getSelectedIndex(combo) 
	{
	    for (var i = 0; i < combo.options.length; i++) 
	    {
	        if (combo.options[i].selected == true) 
	        {
	            return combo.options[i].text;
	        }
	    }
	}
	function getIDSelectedIndex(combo) 
	{
	    for (var i = 0; i < combo.options.length; i++) 
	    {
	        if (combo.options[i].selected == true) 
	        {
	            return combo.options[i].value;
	        }
	    }
	}
	

	//Author     : SIMONE
	//Description: Set value to combo box
	//Parameters : code - it is code associated into each database table 
	//             descripcion - it is description associated into each database table 
	//             field - name combo field
	//             id - identifier retrieved after transaction
	//             linked - flag indicates 'true' when combos are linked and 'false' otherwise
	//Return     : None
	function setValueComboBox(code, description, field, linked)
	{
		//add value text to combo
		addValueToCombo(code,description,field);

		//get select object 
		var combo = document.getElementById(field);
		
		//set element selected to field referenced
		setSelectedIndex(code,combo, description);
		
		//set text value to combo field
		var valueText = getSelectedIndex(combo);		
		
		//get hidden field in order to set any value
		var combo = document.getElementById(field+'_name');
		
		//alert("Text: "+valueText+" - bdID: "+bdID);
		
		combo.text  = valueText;
		combo.value = bdID;
		
		//enable linked fields
		if (linked)
		{
		
		}
	}
	

	//var geo_id7 = null;
	function itemlinea(text, id)
	{		

		var combo = document.getElementById('smn_linea_id');
		var valueCombo = getIDSelectedIndex(combo);
		//geo_id1 = valueCombo.split("-").pop().trim();


		var uri="${def:actionroot}/getlineaitem?id=" + valueCombo;
		// alert(uri)
		if (id!=null && id!="") 
		{
			
			return ajaxCall(	
							httpMethod="GET", 
							uri, 
							divResponse=null, 
							divProgress="status", 
							formName="form1", 
							afterResponseFn=setElementFirstIndex('smn_item_id'), 
							onErrorFn=null);				
		}	
	}	

		function serviciolinea(text, id)
	{		

		var combo = document.getElementById('smn_linea_id');
		var valueCombo = getIDSelectedIndex(combo);
		//geo_id1 = valueCombo.split("-").pop().trim();


		var uri="${def:actionroot}/getlineaservicio?id=" + valueCombo;
		// alert(uri)
		if (id!=null && id!="") 
		{
			
			return ajaxCall(	
							httpMethod="GET", 
							uri, 
							divResponse=null, 
							divProgress="status", 
							formName="form1", 
							afterResponseFn=setElementFirstIndex('smn_servicio_id'), 
							onErrorFn=null);				
		}
	}

		function afijolinea(text, id)
	{		

		var combo = document.getElementById('smn_linea_id');
		var valueCombo = getIDSelectedIndex(combo);
		//geo_id1 = valueCombo.split("-").pop().trim();


		var uri="${def:actionroot}/getlineactf?id=" + valueCombo;
		// alert(uri)
		if (id!=null && id!="") 
		{
			
			return ajaxCall(	
							httpMethod="GET", 
							uri, 
							divResponse=null, 
							divProgress="status", 
							formName="form1", 
							afterResponseFn=setElementFirstIndex('smn_afijo_id'), 
							onErrorFn=null);				
		}	
	}

	/*function validarproducto() {
		var encontrado = document.getElementById("rrs_producto_encontrado").value;
		var naturaleza = document.getElementById('smn_naturaleza_id').value;

		if (encontrado == 'NO') {
			document.getElementById("smn_item_id").disabled=true;
			document.getElementById("buscarItem").style.display = "none";
			// document.getElementById("smn_naturaleza_id")..disabled=false;
			// document.getElementById("smn_servicio_id")..disabled=false;
			// document.getElementById("smn_afijo_id")..disabled=false;
			//document.getElementById("linea").disabled=false;
			document.getElementById("linea").style.display='';
			document.getElementById("naturaleza").style.display='';
			document.getElementById("item").style.display='';
			document.getElementById("servicio").style.display='';
			document.getElementById("activo").style.display='';
		}
		else
		if(encontrado == 'SI' && naturaleza == 'IT')
		{
			document.getElementById("smn_item_id").disabled=false;
			document.getElementById("buscarItem").style.display = "initial";
		}
		else
		{
			document.getElementById("linea").style.display='';
			document.getElementById("naturaleza").style.display='';
			document.getElementById("item").style.display='';
			document.getElementById("servicio").style.display='';
			document.getElementById("activo").style.display='';

		}
	}*/

	
	function recurrente(id){
		var monedaalter = "S";
		var contract = "SI";
		var naturaleza = document.getElementById("smn_naturaleza_id").value;
		//alert(id);
		if(id == 'SI'){
			document.getElementById("precio").style.display='';
			document.getElementById("proveedor").style.display='';
			
		}
		// if(monedaalter == '${fld:alterna}'){
		// 	alert('${fld:alterna}');
		// 		document.getElementById('moneda').style="";
		// 		document.getElementById('r1').style="";
		// 		document.getElementById('r2').style="";
		// }

		// if(naturaleza == 'SE' || recurre == '${fld:recurrente}' || contract == '${fld:contrato}'){
		// 	//document.getElementById("smn_servicio_id").disabled=false;
		// 	document.getElementById('contrato').style="";
		// 	document.getElementById('motivovariacion').style="";
		// 	document.getElementById('porcentaje').style="";
		// }	

	}

	function getItem()
	{
		var uri = "${def:context}${def:actionroot}/getItem/form";
		pickOpen('smn_item_id_name','smn_item_id',uri,650,500);
	}
	
</script>	
</body>
</html>
