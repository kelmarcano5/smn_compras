<!doctype html>
<html>

<head>

	<link rel="stylesheet" type="text/css" href="${def:context}/dinamica_bkp.css" />
	<link rel="stylesheet" type="text/css" href="${def:context}/main.css" />
	<link rel="stylesheet" type="text/css" href="${def:context}/select2.min.css" />

	<!--biblioteca generica JS/Dinamica-->
	<script type="text/javascript" src="${def:context}/action/script">
	</script>
	<script type="text/javascript" src="${def:context}/action/jquery">
	</script>
	<script type="text/javascript" src="${def:context}/action/select2"></script>

</head>

<body>

<!--banner-->
<div class="banner" id="encabezado_tabla">
	${lbl:b_process_offers}
	<img src="${def:context}/images/close.png" class="button" onclick="parent.closeDialog(); parent.search();" title="${lbl:b_close_button}" style="float:right; cursor:pointer;">
	${req:progress}
</div>

<!--formulario de filtro-->
<form name="form1" onsubmit="return search()" style="width:650px;">

	<!--titulo-->
	<h1>${lbl:b_filter_find}</h1>

	<table>
	
	<!--ancho de la columna de etiquetas-->
	<col style="width:40%">

	<!--campos-->
	<tr>
		<td>${lbl:b_entities}</td>
		<td>
			<select name="smn_entidad_id" id="smn_entidad_id" class="js-example-basic-single" onchange="chgCombo1(smn_entidad_id.options[smn_entidad_id.selectedIndex].text,'smn_entidad_id_name');">
				<option value="">[Cualquiera]</option>
				<smn_entidad_id_rows>
				<option value="${fld:id}">${fld:item}</option>

				</smn_entidad_id_rows>
			</select> 
			<input id="smn_entidad_id_name" name="smn_entidad_id_name" type="hidden">
		</td>
	</tr>
	<tr>
		<td>${lbl:b_smn_sucursal}</td>
		<td>
			<select name="smn_sucursal_id" class="js-example-basic-single" id="smn_sucursal_id" onchange="chgCombo(smn_sucursal_id.options[smn_sucursal_id.selectedIndex].text,'smn_sucursal_id_name');" disabled>
				<option value="">[Cualquiera]</option>
				<smn_sucursal_id_rows>
				<option value="${fld:id}">${fld:item}</option>

				</smn_sucursal_id_rows>
			</select> 
			<input id="smn_sucursal_id_name" name="smn_sucursal_id_name" type="hidden">
		</td>
	</tr> 
	<tr>
		<td>${lbl:b_smn_proveedor_id}</td>
		<td>
			<select name="smn_proveedor_id" class="js-example-basic-single" id="smn_proveedor_id" onchange="chgCombo(smn_proveedor_id.options[smn_proveedor_id.selectedIndex].text,'smn_proveedor_id_name');">
				<option value="">[Cualquiera]</option>
				<smn_proveedor_id_rows>
				<option value="${fld:id}">${fld:item}</option>

				</smn_proveedor_id_rows>
			</select> 
			<input id="smn_proveedor_id_name" name="smn_proveedor_id_name" type="hidden">
		</td>
	</tr>
	
	</table>

	
	<!--botones-->	
	<input type="submit" value="${lbl:b_find_button}" class="button">
	<input id="procesar_ofertas" type="button" value="${lbl:b_procesar}" onclick="procesarOfertas()" class="button">
	<input type="button" value="${lbl:b_clean_button}" class="button" onclick="clearForm('form1')">	
	<input id="copiar" type="button" value="${lbl:b_copy_button}" onclick="getFormValuesToCopy('form1')" class="button">
	<input id="pegar" type="button" value="${lbl:b_paste_button}" onclick="getFormValuesToPaste('form1')" class="button">
	<input id="salir" type="button" value="${lbl:s_exit}" onclick="parent.closeDialog(); parent.search();" class="button">
	
</form>

<!--panel de respuesta AJAX #1-->
<div id="response" style="display:none; width:100%; margin-top:10px;"></div>
	
</body>

<!--codigo de soporte del template-->
<script type="text/javascript">

	//inicializacion de la pagina cuando carga
	onload = function()
	{ 
		showFilter();
		search();
		$(document).ready(function() {
		    $('.js-example-basic-single').select2();
		});
	} 
	
	
		
	//mostrar filtro de busqueda
	function showFilter()
	{
		document.getElementById("response").style.display='none';
		setFocusOnForm("form1");
	}
	
	//ejecutar consulta
	function search()
	{
		var url = "${def:actionroot}/search";
		
		//determina si refresca y se para en la pagina actual o en la pagina 1
		if (currentPage > 0)
			url = "${def:actionroot}/search?currentpage=" + currentPage;

		//definir funcion goBack()
		_goBackFn = showFilter;
		
		clearErrorMessages();

		//llamada Ajax...
		return ajaxCall(	httpMethod="POST", 
							uri=url, 
							divResponse="response", 
							divProgress="status", 
							formName="form1", 
							afterResponseFn=null, 
							onErrorFn=showFilter);

	}

	//mostrar una pagina del grid
	function viewPage()
	{
		var url = "${def:actionroot}/view";
		//llama a la funcion para ir a la pagina indicada 
		gotoPage(url);
	}		
	
	//retorna al estado previo que corresponde
	//al estado actual de la pagina, cada llamada Ajax
	//se encarga de definir cual es la funcion de goBack() que aplica
	function goBack() 
	{
		_goBackFn()			
	}
	
	function procesar(oferta_id, estatus)
	{
		if(estatus=='GE')
		{
			uri = "${def:context}${def:actionroot}/procesar?smn_oferta_id="+ oferta_id;	
			openDialog("dialog", uri, 1150, 700);
		}
		else
		{
			alertBox('${lbl:b_offer_approved}','${lbl:b_ok}',null, null);
		}
			
	}

	function procesarOfertas()
	{
		var entidad=document.getElementById('smn_entidad_id').value;
		var sucursal=document.getElementById('smn_sucursal_id').value;
		var proveedor=document.getElementById('smn_proveedor_id').value;

		
		// alert(entidad);
		// alert(sucursal);
		// alert(proveedor);

		uri = "${def:context}${def:actionroot}/procesar?smn_proveedor_id="+proveedor+"&smn_entidad_id="+entidad+"&smn_sucursal_id="+sucursal;	
		openDialog("dialog", uri, 650, 500);	

		
			
	}

	//Author     : SIMONE
	//Description: Set first element as selected value
	//Return     : None
	function setElementFirstIndex(id)
	{
		var combo = document.getElementById(id);
		combo.selectedIndex = 0;
	}

	//Author     : SIMONE
	//Description: Insert new value into combo box
	//Return     : None
	function insertComboBox(code, combo, description) {
		var valueText = code;
		if (description != null)
		{
			valueText = valueText + ' - ' + description;
		}
		//alert("Insert Combo: "+valueText);
        combo.options[combo.options.length] = new Option(valueText);
	}
	
	//Author     : SIMONE
	//Description: Add new value to combo box
	//Return     : None
	function addValueToCombo(code, description, field) 
	{
	    var combo = document.getElementById(field);	    
	    insertComboBox(code, combo, description);
	}
	//Author     : SIMONE
	//Description: Set selected index into combo box
	//Return     : None
	function setSelectedIndex(code, combo, description) 
	{
	    for (var i = 0; i < combo.options.length; i++) 
	    {
			var valueText = code;
			if (description != null)
			{
				valueText = valueText + ' - ' + description;
			}
	        if (combo.options[i].text == valueText) 
	        {
	        	combo.options[i].selected = true;
	            return;
	        }
	    }
	}
	
	//Author     : SIMONE
	//Description: Get text valueof selected index
	//Return     : Text associated to index
	function getSelectedIndex(combo) 
	{
	    for (var i = 0; i < combo.options.length; i++) 
	    {
	        if (combo.options[i].selected == true) 
	        {
	            return combo.options[i].text;
	        }
	    }
	}

	function getIDSelectedIndex(combo) 
	{
	    for (var i = 0; i < combo.options.length; i++) 
	    {
	        if (combo.options[i].selected == true) 
	        {
	            return combo.options[i].value;
	        }
	    }
	}
	

	//Author     : SIMONE
	//Description: Set value to combo box
	//Parameters : code - it is code associated into each database table 
	//             descripcion - it is description associated into each database table 
	//             field - name combo field
	//             id - identifier retrieved after transaction
	//             linked - flag indicates 'true' when combos are linked and 'false' otherwise
	//Return     : None
	function setValueComboBox(code, description, field, linked)
	{
		//add value text to combo
		addValueToCombo(code,description,field);

		//get select object 
		var combo = document.getElementById(field);
		
		//set element selected to field referenced
		setSelectedIndex(code,combo, description);
		
		//set text value to combo field
		var valueText = getSelectedIndex(combo);		
		
		//get hidden field in order to set any value
		var combo = document.getElementById(field+'_name');
		
		//alert("Text: "+valueText+" - bdID: "+bdID);
		
		combo.text  = valueText;
		combo.value = bdID;
		
		//enable linked fields
		if (linked)
		{
			
			
			if (field == 'smn_area_id')
			{
				document.form1.smn_area_id.disabled = false;
			}
			
			if (field == 'smn_sucursal_id')
			{
				document.form1.smn_sucursal_id.disabled = false;
			}
			
		}
	}
	//Este codigo fue creado por SIMONE y ajustado por Kelvin Marcano

	var geo_id1 = null;
	function chgCombo1(text,id)
	{		
		document.form1.smn_sucursal_id.disabled=false;
		
		var combo = document.getElementById('smn_entidad_id');
		var valueCombo = getSelectedIndex(combo);
		geo_id1 = valueCombo.split("-").pop().trim();
		
		//findLocation(geo_id0, '');
		
		if (id!=null && id!="") 
		{
			return ajaxCall(	
							httpMethod="GET", 
							uri="${def:actionroot}/form/getsucursal?id=" + geo_id1, 
							divResponse=null, 
							divProgress="status", 
							formName="form1", 
							afterResponseFn=setElementFirstIndex('smn_sucursal_id'), //function 'setElementFirstIndex' select first element of combo list
							onErrorFn=null);				
		}
		
	}	

	function chgCombo(text,id)
	{
		document.getElementById(id).value = text;
	}

	//mostrar el detalle de un registro
	function getDetail(id)
	{
		//alert('Colocar su código aquí.')
		
		var uri = "${def:context}${def:actionroot}/detail/form?id=" + id;
		openDialog("dialog", uri, 650, 580);
	}

	

</script>

</html>
